% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CriteriaInputs.R
\name{TADA_CreateParamUseRef}
\alias{TADA_CreateParamUseRef}
\title{Parameter and Use Name crosswalk}
\usage{
TADA_CreateParamUseRef(
  .data,
  org_names = NULL,
  paramRef = NULL,
  excel = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{.data}{A TADA dataframe. Users are expected to have already run the appropriate data
cleaning, processing, harmonization and filtering functions prior to this step as well as
provide the geospatial components with Module 2 TADA_GetATTAINS() function.}

\item{org_names}{The ATTAINS organization name must be supplied by the user. A list of
organization names can be found by downloading the ATTAINS Domains Excel file:
https://www.epa.gov/system/files/other-files/2023-09/DOMAINS.xlsx. Organization names
are listed in the "OrgName" tab. The "code" column contains the organization names that
should be used for this param. If a user does not provide an org_names argument, the function
attempts to identify which organization name(s) are found in the dataframe to use as a reference.

NOTE: USERS CAN ADD ON 'EPA304a' AS AN ORG_NAMES INPUT IF THEY ARE INTERESTED IN THE EPA304A STANDARDS

This org_name argument input allows for the drop-down list to reflect prior ATTAINS parameter names
and ATTAINS use names that were used in prior ATTAINS CWA assessment cycles by your org_name.
Users are expected to be the subject matter experts to perform the parameter crosswalk for the org_names
that they have provided in this function.}

\item{paramRef}{A data frame which contains a completed crosswalk between
TADA_ComparableDataIdentifier and ATTAINS.ParameterName. Users will need to ensure this crosswalk
contains the appropriate column names in order to run the function. Users will need to ensure that
they supply a paramRef data frame which contains at least these two column names:
TADA.ComparableDataIdentifier and ATTAINS.ParameterName.
Users who are interested in doing an assessment for more than one org_names will need to also
include in the paramRef data frame which contains an additional column name: 'organization_name'
in order to determine the proper crosswalk between TADA.ComparableDataIdentifier and
ATTAINS.ParameterName by organization name.}

\item{excel}{A boolean value that returns an excel spreadsheet if excel = TRUE. This spreadsheet is
created in the user's downloads folder path.
In the R console please type in: file.path(Sys.getenv("USERPROFILE"), "Downloads") in File explorer
if there is trouble locating the file. The file will be named "myfileRef.xlsx".

The excel spreadsheet will highlight the cells in which users should input information. Users may need to
insert additional rows to capture certain ATTAINS.ParameterName that correspond with multiple TADA.CharacteristicName.
Example: If your organization defines pH as "pH, High" and "pH, Low" that correspond to the TADA.CharacteristicName 'PH'.}

\item{overwrite}{A Boolean value that allows users to not overwrite the excel file
that is created. This will help prevent a user from overwriting their progress when
completing the excel spreadsheet.}
}
\value{
A data frame which contains the columns: TADA.ComparableDataIdentifier, organization_name,
EPA304A.PollutantName, ATTAINS.ParameterName, and ATTAINS.FlagUseName. Users will need to review
the crosswalk between ATTAINS.ParameterName, use_name and TADA.ComparableDataIdentifier.
}
\description{
Users will be required to validate the use name crosswalk for each combination of ATTAIN
parameter name and associated use_name that applies to their org(s) with its associated
TADA.ComparableDataIdentifier(s). This can be accomplished by determining which 'use_name'(s)
from the drop-down menu in the excel spreadsheet generated by this function correspond to the
TADA.ComparableDataIdentifier(s) found in the TADA dataframe.
`.
}
\details{
Before running this function, users must runTADA_CreateParamRef() to create the
crosswalk that defines the ATTAINS.ParameterName(s) and use_name(s) needing validation.
All unique use_names from prior ATTAINS assessment cycle are pulled in using
TADA_CreateParamUseRef(). If a user has defined multiple TADA.ComparableDataIdentifier matches
to an ATTAINS.ParameterName, they will need to define whether every TADA.ComparableDataIdentifier
matches to an associated use_name. If certain parameter and use combinations only apply to
certain TADA.ComparableDataIdentifier, users will need to select 'NA' or leave it as blank to
properly capture this logic before summarizing Criteria and Methodology results.

If an ATTAINS use name is not listed as a prior domain value for your org from prior
ATTAINS assessment cycles, users should consider contacting the ATTAINS team to add this to the domain list.
Otherwise, users can still proceed by overriding the data validation by value pasting.
Users will be warned in the ATTAINS.FlagUseName column if they choose to include an
ATTAINS use name that was not named in prior ATTAINS assessment cycles as:
'Suspect: use name is not found as a prior use name for this organization' or
'Suspect: use name is not found as a prior use name for this parameter'

Users will have the flexibility to include the EPA304a standards by including this string in the org_names
function argument. Users who only want the EPA304a standards would input as an argument input:

org_names = "EPA304a"

Users who want both their orgs and EPA304a standards would input a character vector that contains both:

org_names = c("EPA304a", "Utah")

The use_name for EPA304a standards are matched from the CriteriaSearchTool:
(CST) https://www.epa.gov/wqs-tech/state-specific-water-quality-standards-effective-under-clean-water-act-cwa
while the use_name for any other ATTAINS organization names come from ATTAINS domain value for use_name.
}
\examples{
# Users are required to provide a paramRef argument first. See TADA_CreateParamRef() for additional comments.
paramRef_UT <- TADA_CreateParamRef(Data_Nutrients_UT, org_names = "Utah", excel = FALSE)

paramRef_UT2 <- dplyr::mutate(paramRef_UT, ATTAINS.ParameterName = dplyr::case_when(
  TADA.CharacteristicName == "AMMONIA" ~ "AMMONIA, TOTAL",
  TADA.CharacteristicName == "NITRATE" ~ "NITRATE",
  TADA.CharacteristicName == "NITROGEN" ~ "NITRATE/NITRITE (NITRITE + NITRATE AS N)"
))
paramRef_UT3 <- TADA_CreateParamRef(Data_Nutrients_UT, paramRef = paramRef_UT2, org_names = "Utah", excel = FALSE)

# After running TADA_CreateParamRef() users will provide this as a function input. First example is only for the org Utah
paramUseRef_UT <- TADA_CreateParamUseRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_names = c("Utah"), excel = FALSE)

# Users can include the EPA304a standards by itself or compared to their org(s)
paramUseRef_UT2 <- TADA_CreateParamUseRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_names = c("EPA304a", "Utah"), excel = FALSE)
paramUseRef_UT3 <- TADA_CreateParamUseRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_names = c("EPA304a"), excel = FALSE)

}
