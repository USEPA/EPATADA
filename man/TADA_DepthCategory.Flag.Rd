% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResultFlagsIndependent.R
\name{TADA_DepthCategory.Flag}
\alias{TADA_DepthCategory.Flag}
\title{TADA.DepthCategory.Flag}
\usage{
TADA_DepthCategory.Flag(
  .data,
  bycategory = "no",
  bottomvalue = 2,
  surfacevalue = 2,
  dailyagg = "none",
  aggregatedonly = FALSE,
  clean = FALSE
)
}
\arguments{
\item{.data}{TADA dataframe}

\item{bycategory}{character argument with options "no", "all", "surface", "middle",
"bottom". The default is bycategory = "no" which means that any aggregate values
are based on the entire water column at a Monitoring Location. When bycategory
= "all", any aggregate values are determined for each depth category for each
Monitoring Location. When bycategory = "surface", "middle", or "bottom", aggregate
values are determined ONLY for results with TADA.DepthCategory.Flags
"Epilimnion-surface", "Hypolimnion-bottom", or "Metalimnion/Thermocline-middle"
results respectively.}

\item{bottomvalue}{numeric argument. The user enters how many meters from the
bottom should be included in the "Hypolimnion-bottom" category. Default is
bottom = 2.

#' @param surfacevalue numeric argument. The user enters how many meters from the
top should be included in the "Hypolimnion-bottom" category. Default is
top = 2.}

\item{dailyagg}{Character argument; with options "none", "avg", "min", or
"max". The default is daily_agg = "none". When daily_agg = "none", all results
will be retained. When daily_agg == "avg", the mean value in each group of
results (as determined by the depth category) will be identified or calculated for each
MonitoringLocation, ActivityDate, Organization ID, and TADA.CharacteristicName combination.
When daily_agg == "min" or when daily_agg == "max", the min or max
value in each group of results (as determined by the depth category) will
be identified or calculated for each MonitoringLocation, ActivityDate, and TADA.CharacteristicName
combination. An additional column, TADA.DepthProfileAggregation.Flag will be added
to describe aggregation.}

\item{aggregatedonly}{Boolean argument with options "TRUE" or "FALSE". The
default is aeggrgatedonly = "FALSE" which means that all results are returned.
When aggregatedonly = "TRUE", only aggregate values are returned.}

\item{clean}{Boolean argument with options "TRUE" or "FALSE". The
default is clean = "FALSE" which means that all results are returned.
When clean = "TRUE", only aggregate results which can be assigned to a depth
category are included in the returned dataframe.}
}
\value{
The same input TADA dataframe with additional columns TADA.DepthCategory.Flag
and TADA.DepthProfileAggregation.Flag. If a daily_agg = "avg",
"min", or "max", aggregated values will be identified in the TADA.ResultAggregation.Flag
column. In the case of daily_agg = "avg", additional rows to display averages will be
added to the data frame. They can be identified by the prefix ("TADA-") of
their result identifiers.
}
\description{
This function creates a new column, TADA.DepthCategory.Flag with values: "No
depth info", "Epilimnion-surface", "Hypolimnion-bottom", and
"Metalimnion/Thermocline-middle" For results for with MonitoringLocationTypeName
"Lake, Reservoir, Impoundment", "Great Lakes", "Lake", or "Great Lake".
Categories are: less than 2m depth = "Epilimnion", from bottom up to 2m from
bottom= "Hypolimnion-bottom", and the full depth profile for
"Metalimnion/Thermocline-middle". For results with other MonitoringLocationTypeNames
the TADA.DepthCategory.Flag is "Not Calculated for MonitoringLocationType".
}
\details{
When more than one result is available for a MonitoringLocationIdentifier,
ActivityStartDate, OrganizationIdentifier, and TADA.CharacteristicName, the
user can choose a single result value (average, max, or min value) to use for that
day and location. If results vary with depth, the user may also define whether
the daily aggregation occurs over each depth category (surface, middle, or bottom)
or for the entire depth profile.
}
\examples{
# Load dataset
data(Data_6Tribes_5y)

# assign TADA.DepthCategory.Flag with no aggregation
# Data_6Tribs_5y_DepthCat <- TADA_DepthCategory.Flag(Data_6Tribes_5y)

# assign TADA.DepthCategory.Flag and determine average values by depth category and returning only aggregate values
Data_6Tribs_5y_Mean <- TADA_DepthCategory.Flag(Data_6Tribes_5y, bycategory = "all", dailyagg = "avg", aggregatedonly = FALSE)

}
