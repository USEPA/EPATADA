% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ATTAINSCrosswalks.R, R/CriteriaInputs.R
\name{TADA_CreateUseParamRef}
\alias{TADA_CreateUseParamRef}
\title{Create or Update ATTAINS Parameter and Use crosswalk}
\usage{
TADA_CreateUseParamRef(
  .data,
  org_id = NULL,
  paramRef = NULL,
  UseParamRef = NULL,
  excel = FALSE,
  overwrite = FALSE
)

TADA_CreateUseParamRef(
  .data,
  org_id = NULL,
  paramRef = NULL,
  UseParamRef = NULL,
  excel = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{.data}{A TADA dataframe. Users are expected to have already run the appropriate data
cleaning, processing, harmonization and filtering functions prior to this step as well as
provide the geospatial components with Module 2 TADA_GetATTAINS() function.}

\item{org_id}{The ATTAINS organization identifier must be supplied by the user. A list of
organization identifiers can be found by downloading the ATTAINS Domains Excel file:
https://www.epa.gov/system/files/other-files/2023-09/DOMAINS.xlsx. organization identifiers
are listed in the "OrgName" tab. The "code" column contains the organization identifiers that
should be used for this param. If a user does not provide an org_id argument, the function
attempts to identify which organization identifier(s) are found in the dataframe to use as a reference.

NOTE: USERS CAN ADD ON 'EPA304a' AS AN org_id INPUT IF THEY ARE INTERESTED IN THE EPA304A STANDARDS

This org_name argument input allows for the drop-down list to reflect prior ATTAINS parameter names
and ATTAINS use names that were used in prior ATTAINS CWA assessment cycles by your org_name.
Users are expected to be the subject matter experts to perform the parameter crosswalk for the org_id
that they have provided in this function.}

\item{paramRef}{A data frame which contains a completed crosswalk between
TADA_ComparableDataIdentifier and ATTAINS.ParameterName. Users will need to ensure this crosswalk
contains the appropriate column names in order to run the function. Users will need to ensure that
they supply a paramRef data frame which contains at least these two column names:
TADA.ComparableDataIdentifier and ATTAINS.ParameterName.
Users who are interested in doing an assessment for more than one org_id will need to also
include in the paramRef data frame which contains an additional column name: 'organization_identifier'
in order to determine the proper crosswalk between TADA.ComparableDataIdentifier and
ATTAINS.ParameterName by organization identifier.}

\item{UseParamRef}{A data frame which contains a completed crosswalk of org specific
domain value of use_name by ATTAINS.ParameterName.}

\item{excel}{A boolean value that returns an excel spreadsheet if excel = TRUE. This spreadsheet is
created in the user's downloads folder path.
In the R console please type in: file.path(Sys.getenv("USERPROFILE"), "Downloads") in File explorer
if there is trouble locating the file. The file will be named "myfileRef.xlsx".

The excel spreadsheet will highlight the cells in which users should input information. Users may need to
insert additional rows to capture certain ATTAINS.ParameterName that correspond with multiple TADA.CharacteristicName.
Example: If your organization defines pH as "pH, High" and "pH, Low" that correspond to the TADA.CharacteristicName 'PH'.}

\item{overwrite}{A Boolean value that allows users to not overwrite the excel file
that is created. This will help prevent a user from overwriting their progress when
completing the excel spreadsheet.}

\item{useParamRef}{A dataframe which contains a completed crosswalk of
organization specific use_name(s) for each ATTAINS.ParameterName.
Users will need to ensure this crosswalk contains the appropriate column
names in order to  run the function. Users who have previously completed
this crosswalk table can re-use it and review this output for accuracy.}
}
\value{
A dataframe which contains the columns: TADA.ComparableDataIdentifier,
organization_identifier, EPA304A.PollutantName, ATTAINS.ParameterName,
and ATTAINS.FlagUseName. Users will need to review the crosswalk between
ATTAINS.ParameterName, use_name and TADA.ComparableDataIdentifier.

A data frame which contains the columns: TADA.ComparableDataIdentifier, organization_identifier,
EPA304A.PollutantName, ATTAINS.ParameterName, and ATTAINS.FlagUseName. Users will need to review
the crosswalk between ATTAINS.ParameterName, use_name and TADA.ComparableDataIdentifier.
}
\description{
This function generates a crosswalk of all parameters and uses applicable
to the selected organization(s) in ATTAINS. Users should review and validate
each ATTAINS.ParameterName and associated use_name combination.
As part of this review process, users should check to make sure each
'use_name' from the drop-down menu in the excel spreadsheet generated by this
function also accurately corresponds to the correct TADA.ComparableDataIdentifier
and ATTAINS.ParameterName found in the TADA dataframe. This function should be
run after creating a parameter (ATTAINS.ParameterName and
TADA.ComparableDataIdentifier) crosswalk.

Users will be required to validate the use name crosswalk for each combination of ATTAIN
parameter name and associated use_name that applies to their org(s) with its associated
TADA.ComparableDataIdentifier(s). This can be accomplished by determining which 'use_name'(s)
from the drop-down menu in the excel spreadsheet generated by this function correspond to the
TADA.ComparableDataIdentifier(s) found in the TADA dataframe.
}
\details{
Before running this function, users must run TADA_CreateParamRef() to
create the crosswalk that defines the ATTAINS.ParameterName(s) and
use_name(s) needing validation. All unique use_names from prior ATTAINS
assessment cycles are pulled in using TADA_CreateUseParamRef(). If a user has
defined multiple TADA.ComparableDataIdentifier matches to an
ATTAINS.ParameterName, they will need to define whether every
TADA.ComparableDataIdentifier matches to an associated use_name.
If certain parameter and use combinations only apply to certain
TADA.ComparableDataIdentifier(s), users will need to select 'NA' or leave it
as blank to properly capture this logic.

If an ATTAINS use name is not listed as a prior domain value for your organization
from prior ATTAINS assessment cycles, users can contact the ATTAINS helpdesk
\email{attains@epa.gov} to inquire about adding the use to the ATTAINS
domain list. Otherwise, users can still
proceed by overriding the data validation by value pasting in Excel.
Users will be warned in the ATTAINS.FlagUseName column if they choose to
include an ATTAINS use name that was not listed in prior ATTAINS assessment cycles as:
'Use name is not listed as a prior cause in ATTAINS for this organization' or
'Use name is listed as a prior cause in this organization, but not for this parameter name'.

Users will have the flexibility to include the EPA304a criteria by including
the string 'EPA304a' in the org_id function argument.Users who only want to
review data against the EPA304a criteria can enter: org_id = "EPA304a".

Users who want both their organization and and the EPA304a criteria
can input a vector such as: org_id = c("EPA304a", "UTAHDWQ").

NOTE: The EPA304a criteria are not a part of ATTAINS. This information is
brought in from EPA's Criteria Search Tool (CST):
www.epa.gov/wqs-tech/state-specific-water-quality-standards-effective-under-clean-water-act-cwa.
The TADA Team has crosswalked the CST pollutant names with
TADA.ComparableDataIdentifier(s) to make the criteria values available for
use within TADA functions. The use_name(s) associated with the EPA304a
criteria are included from the CST. All other use_name(s) are specific to an
ATTAINS organization and come from the ATTAINS domain value for use_name.

Before running this function, users must run TADA_CreateParamRef() to create the
crosswalk that defines the ATTAINS.ParameterName(s) and use_name(s) needing validation.
All unique use_names from prior ATTAINS assessment cycle are pulled in using
TADA_CreateUseParamRef(). If a user has defined multiple TADA.ComparableDataIdentifier matches
to an ATTAINS.ParameterName, they will need to define whether every TADA.ComparableDataIdentifier
matches to an associated use_name. If certain parameter and use combinations only apply to
certain TADA.ComparableDataIdentifier, users will need to select 'NA' or leave it as blank to
properly capture this logic before summarizing Criteria and Methodology results.

If an ATTAINS use name is not listed as a prior domain value for your org from prior
ATTAINS assessment cycles, users should consider contacting the ATTAINS team to add this to the domain list.
Otherwise, users can still proceed by overriding the data validation by value pasting.
Users will be warned in the ATTAINS.FlagUseName column if they choose to include an
ATTAINS use name that was not named in prior ATTAINS assessment cycles as:
'Use name is not listed as a prior cause in ATTAINS for this organization' or
'Use name is listed as a prior cause in this organization, but not for this parameter name'

Users will have the flexibility to include the EPA304a standards by including this string in the org_id
function argument.

Users who only want the EPA304a standards would input as an argument input:

org_id = "EPA304a"

Users who want both their orgs and EPA304a standards would input a character vector that contains both:

org_id = c("EPA304a", "UTAHDWQ")

NOTE: The EPA304a standards are not a part of the ATTAINS domain value, these standards
have been crosswalk to a list of priority TADA.ComparableDataIdentifier by the internal EPATADA team.
The use_name for EPA304a standards are matched from the CriteriaSearchTool (CST):
www.epa.gov/wqs-tech/state-specific-water-quality-standards-effective-under-clean-water-act-cwa
while the use_name for any other ATTAINS organization identifiers come from ATTAINS domain value for use_name.
}
\examples{
# First, generate and fill out a parameter crosswalk (see TADA_CreateParamRef()):
paramRef_UT <- TADA_CreateParamRef(Data_Nutrients_UT, org_id = "UTAHDWQ", excel = FALSE)
paramRef_UT2 <- dplyr::mutate(paramRef_UT, ATTAINS.ParameterName = dplyr::case_when(
  grepl("AMMONIA", TADA.ComparableDataIdentifier) ~ "AMMONIA, TOTAL",
  grepl("NITRATE", TADA.ComparableDataIdentifier) ~ "NITRATE",
  grepl("NITROGEN", TADA.ComparableDataIdentifier) ~ "NITRATE/NITRITE (NITRITE + NITRATE AS N)"
))
paramRef_UT3 <- TADA_CreateParamRef(
  Data_Nutrients_UT,
  paramRef = paramRef_UT2, org_id = "UTAHDWQ", excel = FALSE
)

# Next, enter the crosswalk generated above as the paramRef function input
# for TADA_CreateUseParamRef():
UseParamRef_UT <- TADA_CreateUseParamRef(
  Data_Nutrients_UT,
  paramRef = paramRef_UT3, org_id = c("UTAHDWQ"), excel = FALSE
)

# Users can include the EPA304a criteria by itself or in addition to their org(s)
UseParamRef_UT2 <- TADA_CreateUseParamRef(
  Data_Nutrients_UT,
  paramRef = paramRef_UT3,
  org_id = c("EPA304a", "UTAHDWQ"), excel = FALSE
)

UseParamRef_UT3 <- TADA_CreateUseParamRef(
  Data_Nutrients_UT,
  paramRef = paramRef_UT3,
  org_id = c("EPA304a"), excel = FALSE
)

# Users are required to provide a paramRef argument first. See TADA_CreateParamRef() for additional comments.
paramRef_UT <- TADA_CreateParamRef(Data_Nutrients_UT, org_id = "UTAHDWQ", excel = FALSE)

paramRef_UT2 <- dplyr::mutate(paramRef_UT, ATTAINS.ParameterName = dplyr::case_when(
  TADA.CharacteristicName == "AMMONIA" ~ "AMMONIA, TOTAL",
  TADA.CharacteristicName == "NITRATE" ~ "NITRATE",
  TADA.CharacteristicName == "NITROGEN" ~ "NITRATE/NITRITE (NITRITE + NITRATE AS N)"
))
paramRef_UT3 <- TADA_CreateParamRef(Data_Nutrients_UT, paramRef = paramRef_UT2, org_id = "UTAHDWQ", excel = FALSE)

# After running TADA_CreateParamRef() users will provide this as a function input. First example is only for the org UTAHDWQ
UseParamRef_UT <- TADA_CreateUseParamRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_id = c("UTAHDWQ"), excel = FALSE)

# Users can include the EPA304a standards by itself or compared to their org(s)
UseParamRef_UT2 <- TADA_CreateUseParamRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_id = c("EPA304a", "UTAHDWQ"), excel = FALSE)
UseParamRef_UT3 <- TADA_CreateUseParamRef(Data_Nutrients_UT, paramRef = paramRef_UT3, org_id = c("EPA304a"), excel = FALSE)

}
\seealso{
\code{\link[=TADA_CreateParamRef]{TADA_CreateParamRef()}}

\code{\link[=TADA_GetEPACSTRef]{TADA_GetEPACSTRef()}}
}
